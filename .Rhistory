variance <- data.frame(PC = 1:252, Var = variance*100)
ggplot(data = variance[1:10,], aes(x = factor(PC), y = Var)) + geom_bar(stat = "identity")
sum(variance$Var[1:70])
sum(variance$Var[1:65])
library(magrittr)
train <- predict(pr.out) %>% as.data.frame(cbind(train$label, .))
train <- predict(pc) %>% as.data.frame(cbind(train$label, .))
train <- slice(data_train, split)
train <- train[, !zero_var_col$nzv]
train <- (predict(pc) %>% as.data.frame(cbind(train$label, .)))
train <- predict(pc) %>% cbind(train$label, .) %>% as.data.frame(.)
train <- slice(data_train, split)
train <- train[, !zero_var_col$nzv]
train <- predict(pc) %>% cbind(train$label, .) %>% as.data.frame(.)
train <- slice(data_train, split)
train <- train[, !zero_var_col$nzv]
train <- predict(pc) %>% cbind(train$label, .) %>% as.data.frame(.)
train <- slice(data_train, split)
train <- train[, !zero_var_col$nzv]
train <- predict(pc) %>% cbind(train$label, .) %>% as.data.frame(.) %>% select(1:71)
train %<>% predict(pc, .) %>% cbind(test$label, .) %>% as.data.frame(.) %>% select(1:71)
test %<>% predict(pc, .) %>% cbind(test$label, .) %>% as.data.frame(.) %>% select(1:71)
library("doParallel", lib.loc="C:/Program Files/R/R-3.2.2/library")
getDoParWorkers()
library("doParallel")
getDoParWorkers()
which.max(c(1,2,3))
which.max(c(1,1,1))
c(6,6,5) %>% table(.) %>% which.max(.) %>% names(.) %>% as.numeric(.)
library(magrittr)
c(6,6,5) %>% table(.) %>% which.max(.) %>% names(.) %>% as.numeric(.)
c(6,6,6) %>% table(.) %>% which.max(.) %>% names(.) %>% as.numeric(.)
c(6,7,8) %>% table(.) %>% which.max(.) %>% names(.) %>% as.numeric(.)
data_test <- read_csv("test.csv")
library(readr)
data_test <- read_csv("test.csv")
zero_var_col <- nearZeroVar(data_train, saveMetrics = T)
library(caret)
zero_var_col <- nearZeroVar(data_train, saveMetrics = T)
data_train <- data_train[, !zero_var_col$nzv]
data_test <- data_test[, !zero_var_col$nzv]
data_test <- read_csv("test.csv")
data_train <- read_csv("train.csv")
zero_var_col <- nearZeroVar(data_train, saveMetrics = T)
zero_var_col$nzv
zero_var_col <- nearZeroVar(data_train[, -1], saveMetrics = T)
data_train <- data_train[, !zero_var_col$nzv]
data_test <- data_test[, !zero_var_col$nzv]
zero_var_col$nzv
data_test <- read_csv("test.csv")
data_train <- read_csv("train.csv")
label <- data_train$label
data_train <- data_train[, -1]
zero_var_col <- nearZeroVar(data_train, saveMetrics = T)
data_train <- data_train[, !zero_var_col$nzv]
data_test <- data_test[, !zero_var_col$nzv]
pc <- princomp(data_train, cor=TRUE, scores=TRUE)
data_train <- predict(pc) %>% cbind(label, .) %>% as.data.frame(.) %>% select(1:71)
library(dplyr)
data_train <- predict(pc) %>% cbind(label, .) %>% as.data.frame(.) %>% select(1:71)
data_train$label <- as.factor(data_train$label)
data_test %<>% predict(pc, .) %>% as.data.frame(.) %>% select(1:70)
rm(test, train, train_1000)
library(class)
prediction_knn <- knn(data_train, data_test, data_train$label, k=3)
data_test <- read_csv("test.csv")
data_train <- read_csv("train.csv")
label <- data_train$label
data_train <- data_train[, -1]
zero_var_col <- nearZeroVar(data_train, saveMetrics = T)
data_train <- data_train[, !zero_var_col$nzv]
data_test <- data_test[, !zero_var_col$nzv]
pc <- princomp(data_train, cor=TRUE, scores=TRUE)
data_train <- predict(pc) %>% cbind(label, .) %>% as.data.frame(.) %>% select(1:71)
data_train$label <- as.factor(data_train$label)
data_test %<>% predict(pc, .) %>% as.data.frame(.) %>% select(1:70)
label <- data_train$label
data_train <- data_train[, -1]
prediction_knn <- knn(data_train, data_test, label, k=3)
library(randomForest)
rfFit <- randomForest(label ~ ., data = data_train, mtry = 4)
data_train <- data_train %>% cbind(label, .) %>% as.data.frame(.)
rfFit <- randomForest(label ~ ., data = data_train, mtry = 4)
rfFit <- randomForest(label ~ ., data = data_train[sample(nrow(train), size = 30000),], mtry = 4)
rfFit <- randomForest(label ~ ., data = data_train[sample(nrow(data_train), size = 30000),], mtry = 4)
rfFit <- randomForest(label ~ ., data = data_train[sample(nrow(data_train), size = 25000),], mtry = 4)
rfFit <- randomForest(label ~ ., data = data_train[sample(nrow(data_train), size = 20000),], mtry = 4)
rfFit <- randomForest(label ~ ., data = data_train[sample(nrow(data_train), size = 15000),], mtry = 4)
rfFit <- randomForest(label ~ ., data = data_train[sample(nrow(data_train), size = 10000),], mtry = 4)
prediction_rf<-predict(rfFit,data_test)
library(kernlab)
svmFit <- ksvm(label ~ ., data = data_train,type="C-svc",kernel="rbfdot",kpar=list(sigma=0.008),C=4)
rm(rfFit)
svmFit <- ksvm(label ~ ., data = data_train,type="C-svc",kernel="rbfdot",kpar=list(sigma=0.008),C=4)
prediction_svm <- predict(svmFit, newdata = data_test)
all_prediction <- cbind(as.numeric(levels(prediction_knn))[prediction_knn],
as.numeric(levels(prediction_rf))[prediction_rf],
as.numeric(levels(prediction_svm))[prediction_svm])
predictions_ensemble <- apply(all_prediction, 1, function(row) {
row %>% table(.) %>% which.max(.) %>% names(.) %>% as.numeric(.)
})
predictions <- data.frame(ImageId=1:nrow(data_test), Label=predictions_ensemble)
write_csv(predictions, "ensemble.csv")
predictions <- data.frame(ImageId=1:nrow(data_test), Label=all_prediction[,1])
write_csv(predictions, "knn.csv")
predictions <- data.frame(ImageId=1:nrow(data_test), Label=all_prediction[,2])
write_csv(predictions, "rf.csv")
predictions <- data.frame(ImageId=1:nrow(data_test), Label=all_prediction[,3])
write_csv(predictions, "svm.csv")
rm(list = ls())
rm(list = ls())
library(readr)
library(caret)
library(ggbiplot)
library(ggplot2)
library(dplyr)
library(rgl)
data_train <- read_csv("train.csv")
set.seed(111)
split <- createDataPartition(data_train$label, p = 0.6, list = FALSE)
train <- slice(data_train, split)
test <- slice(data_train, -split)
zero_var_col <- nearZeroVar(train, saveMetrics = T)
train <- train[, !zero_var_col$nzv]
test <- test[, !zero_var_col$nzv]
dim(train)
train_1000 <- train[sample(nrow(train), size = 1000),]
pc <- princomp(train_1000[, -1], cor=TRUE, scores=TRUE)
pc <- princomp(train[, -1], cor=TRUE, scores=TRUE)
names(pc)
colors<-c('white','black')
cus_col<-colorRampPalette(colors=colors)
default_par <- par()
par(mfrow=c(6,6),pty='s',mar=c(1,1,1,1),xaxt='n',yaxt='n')
for(i in 1:36)
{
z<-array(as.matrix(data_train)[i,-1],dim=c(28,28))
z<-z[,28:1]
image(1:28,1:28,z,main=data_train[i,1],col=cus_col(256))
}
par(default_par)
print(pc)
plot(pc)
default_par <- par()
par(mfrow=c(6,6),pty='s',mar=c(1,1,1,1),xaxt='n',yaxt='n')
for(i in 1:36)
{
z<-array(as.matrix(train_1000)[i,-1],dim=c(28,28))
z<-z[,28:1]
image(1:28,1:28,z,main=train_1000[i,1],col=cus_col(256))
}
par(default_par)
train_1000 <- train[sample(nrow(train), size = 1000),]
train_1000 <- train[sample(nrow(data_train), size = 1000),]
par(mfrow=c(6,6),pty='s',mar=c(1,1,1,1),xaxt='n',yaxt='n')
for(i in 1:36)
{
z<-array(as.matrix(train_1000)[i,-1],dim=c(28,28))
z<-z[,28:1]
image(1:28,1:28,z,main=train_1000[i,1],col=cus_col(256))
}
par(default_par)
train_1000 <- data_train[sample(nrow(data_train), size = 1000),]
warnings()
par(mfrow=c(6,6),pty='s',mar=c(1,1,1,1),xaxt='n',yaxt='n')
for(i in 1:36)
{
z<-array(as.matrix(train_1000)[i,-1],dim=c(28,28))
z<-z[,28:1]
image(1:28,1:28,z,main=train_1000[i,1],col=cus_col(256))
}
par(default_par)
names(pc)
pc$scores
names(pc)
pc <- princomp(train_1000[, -1], cor=TRUE, scores=TRUE)
rm(list = ls())
data_train <- read_csv("train.csv")
train_1000 <- data_train[sample(nrow(data_train), size = 1000),]
colors<-c('white','black')
cus_col<-colorRampPalette(colors=colors)
default_par <- par()
par(mfrow=c(6,6),pty='s',mar=c(1,1,1,1),xaxt='n',yaxt='n')
for(i in 1:36)
{
z<-array(as.matrix(train_1000)[i,-1],dim=c(28,28))
z<-z[,28:1]
image(1:28,1:28,z,main=train_1000[i,1],col=cus_col(256))
}
par(default_par)
par(mfrow=c(6,6),pty='s',mar=c(1,1,1,1),xaxt='n',yaxt='n')
number_row <- 28
number_col <- 28
for(i in 1:36)
{
z<-array(as.matrix(train_1000)[i,-1],dim=c(number_row,number_col))
z<-z[,number_col:1]
image(1:number_row,1:number_col,z,main=train_1000[i,1],col=cus_col(256))
}
par(default_par)
zero_var_col <- nearZeroVar(train_1000, saveMetrics = T)
train_1000 <- train_1000[, !zero_var_col$nzv]
pc <- princomp(train_1000[, -1], cor=TRUE, scores=TRUE)
restr <- pc$scores[,1:70] %*% t(pc$loadings[,1:70])
if(pc$scale != FALSE){
restr <- scale(restr, center = FALSE , scale=1/pc$scale)
}
rm(list = ls())
data_train <- read_csv("train.csv")
train_36 <- data_train[sample(nrow(data_train), size = 36),]
colors<-c('white','black')
cus_col<-colorRampPalette(colors=colors)
default_par <- par()
par(mfrow=c(6,6),pty='s',mar=c(1,1,1,1),xaxt='n',yaxt='n')
number_row <- 28
number_col <- 28
for(i in 1:36)
{
z<-array(as.matrix(train_36)[i,-1],dim=c(number_row,number_col))
z<-z[,number_col:1]
image(1:number_row,1:number_col,z,main=train_1000[i,1],col=cus_col(256))
}
for(i in 1:36)
{
z<-array(as.matrix(train_36)[i,-1],dim=c(number_row,number_col))
z<-z[,number_col:1]
image(1:number_row,1:number_col,z,main=train_36[i,1],col=cus_col(256))
}
par(default_par)
par(mfrow=c(6,6),pty='s',mar=c(1,1,1,1),xaxt='n',yaxt='n')
number_row <- 28
number_col <- 28
for(i in 1:36)
{
z<-array(as.matrix(train_36)[i,-1],dim=c(number_row,number_col))
z<-z[,number_col:1]
image(1:number_row,1:number_col,z,main=train_36[i,1],col=cus_col(256))
}
par(default_par)
zero_var_col <- nearZeroVar(train_36, saveMetrics = T)
train_36 <- train_36[, !zero_var_col$nzv]
pc <- princomp(train_36[, -1], cor=TRUE, scores=TRUE)
rm(list = ls())
data_train <- read_csv("train.csv")
train_1000 <- data_train[sample(nrow(data_train), size = 1000),]
colors<-c('white','black')
cus_col<-colorRampPalette(colors=colors)
default_par <- par()
par(mfrow=c(6,6),pty='s',mar=c(1,1,1,1),xaxt='n',yaxt='n')
number_row <- 28
number_col <- 28
for(i in 1:36)
{
z<-array(as.matrix(train_1000)[i,-1],dim=c(number_row,number_col))
z<-z[,number_col:1]
image(1:number_row,1:number_col,z,main=train_1000[i,1],col=cus_col(256))
}
par(default_par)
zero_var_col <- nearZeroVar(train_1000, saveMetrics = T)
train_1000 <- train_1000[, !zero_var_col$nzv]
pc <- princomp(train_1000[, -1], cor=TRUE, scores=TRUE)
restr <- pc$scores[,1:70] %*% t(pc$loadings[,1:70])
dim(restr)
pc$scale
pca <- prcomp(train_1000[, -1], center = TRUE, scale = TRUE)
names(pca)
pca$scale
pca$center
pca$scale != FALSE
pca$center != FALSE
restr <- pca$x[,1:20] %*% t(pca$rotation[,1:20])
restr <- pca$x[,1:70] %*% t(pca$rotation[,1:70])
restr <- scale(restr, center = FALSE , scale=1/pc$scale)
restr <- scale(restr, center = -1 * pc$center, scale=FALSE)
dim(restr)
sqrt(297)
sqrt(296)
sqrt(295)
sqrt(294)
17*17
number_row <- 17
number_col <- 17
par(mfrow=c(6,6),pty='s',mar=c(1,1,1,1),xaxt='n',yaxt='n')
for(i in 1:36)
{
z<-array(restr[i,1:289],dim=c(number_row,number_col))
z<-z[,number_col:1]
image(1:number_row,1:number_col,z,main=train_1000[i,1],col=cus_col(256))
}
par(default_par)
z<-array(restr[1,1:289],dim=c(number_row,number_col))
z<-z[,number_col:1]
image(1:number_row,1:number_col,z,main=train_1000[1,1],col=cus_col(256))
restr <- pc$scores[,1:70] %*% t(pc$loadings[,1:70])
restr
dim(restr)
restr <- scale(restr, center = FALSE , scale=1/pc$scale)
restr <- scale(restr, center = -1 * pc$center, scale=FALSE)
16*17
17*17
17*18
16*18
z<-array(as.matrix(train_1000)[1,-1],dim=c(number_row,number_col))
z<-z[,number_col:1]
image(1:number_row,1:number_col,z,main=train_1000[1,1],col=cus_col(256))
rm(list = ls())
data_train <- read_csv("train.csv")
train_1000 <- data_train[sample(nrow(data_train), size = 1000),]
colors<-c('white','black')
cus_col<-colorRampPalette(colors=colors)
default_par <- par()
number_row <- 28
number_col <- 28
par(mfrow=c(6,6),pty='s',mar=c(1,1,1,1),xaxt='n',yaxt='n')
for(i in 1:36)
{
z<-array(as.matrix(train_1000)[i,-1],dim=c(number_row,number_col))
z<-z[,number_col:1]
image(1:number_row,1:number_col,z,main=train_1000[i,1],col=cus_col(256))
}
par(default_par)
zero_var_col <- nearZeroVar(train_1000, saveMetrics = T)
train_1000_cut <- train_1000[, !zero_var_col$nzv]
zero_var_col <- nearZeroVar(train_1000, saveMetrics = T)
train_1000_cut <- train_1000[, !zero_var_col$nzv]
set.seed(111)
train_1000 <- data_train[sample(nrow(data_train), size = 1000),]
zero_var_col <- nearZeroVar(train_1000, saveMetrics = T)
train_1000_cut <- train_1000[, !zero_var_col$nzv]
ncol(train_1000)
for (i in 1:ncol(train_1000)) {
if (zero_var_col$nzv[i] = T) test[, i] <- train_1000_cut[, i]
else test[, i] <- train_1000[, i]
}
for (i in 1:ncol(train_1000)) {
if (zero_var_col$nzv[i] == T) test[, i] <- train_1000_cut[, i]
else test[, i] <- train_1000[, i]
}
str(train_1000)
test <- data.frame(matrix(NA, nrow = 1000, ncol = ncol(train_1000)))
for (i in 1:ncol(train_1000)) {
if (zero_var_col$nzv[i] == T) test[, i] <- train_1000_cut[, i]
else test[, i] <- train_1000[, i]
}
ncol(train_1000)
length(zero_var_col$nzv)
select(train_1000, 1)
test[,1] <- select(train_1000, 1)
zero_col_number <- 1
for (i in 1:ncol(train_1000)) {
if (zero_var_col$nzv[i] == T) {
test[, i] <- train_1000_cut[, zero_col_number]
zero_col_number <- zero_col_number + 1
}
else test[, i] <- train_1000[, i]
}
for (i in 1:ncol(train_1000)) {
if (zero_var_col$nzv[i] == T) {
test[, i] <- train_1000_cut[, zero_col_number]
zero_col_number <- zero_col_number + 1
}
else test[, i] <- train_1000[, i]
}
test <- data.frame(matrix(NA, nrow = 1000, ncol = ncol(train_1000)))
zero_col_number <- 1
for (i in 1:ncol(train_1000)) {
if (zero_var_col$nzv[i] == T) {
test[, i] <- train_1000_cut[, zero_col_number]
zero_col_number <- zero_col_number + 1
}
else test[, i] <- train_1000[, i]
}
test <- data.frame(matrix(NA, nrow = 1000, ncol = ncol(train_1000)))
test[, 1] <- train_1000[, 1]
zero_var_col$nzv[396]
zero_var_col$nzv[395]
zero_var_col$nzv[397]
sum(zero_var_col$nzv)
489+296
test <- data.frame(matrix(NA, nrow = 1000, ncol = ncol(train_1000)))
zero_col_number <- 1
for (i in 1:ncol(train_1000)) {
if (zero_var_col$nzv[i] == F) {
test[, i] <- train_1000_cut[, zero_col_number]
zero_col_number <- zero_col_number + 1
}
else test[, i] <- train_1000[, i]
}
install.packages("compare")
identical(test, train_1000)
library("compare")
comparison <- compare(train_1000, test)
comparison$detailedResult
sum(comparison$detailedResult)
default_par <- par()
number_row <- 28
number_col <- 28
par(mfrow=c(6,6),pty='s',mar=c(1,1,1,1),xaxt='n',yaxt='n')
for(i in 1:36)
{
z<-array(as.matrix(test)[i,-1],dim=c(number_row,number_col))
z<-z[,number_col:1]
image(1:number_row,1:number_col,z,main=test[i,1],col=cus_col(256))
}
par(default_par)
default_par <- par()
number_row <- 28
number_col <- 28
par(mfrow=c(6,6),pty='s',mar=c(1,1,1,1),xaxt='n',yaxt='n')
for(i in 1:36)
{
z<-array(as.matrix(train_1000)[i,-1],dim=c(number_row,number_col))
z<-z[,number_col:1]
image(1:number_row,1:number_col,z,main=train_1000[i,1],col=cus_col(256))
}
par(default_par)
rm(list = ls())
data_train <- read_csv("train.csv")
set.seed(111)
train_1000 <- data_train[sample(nrow(data_train), size = 1000),]
colors<-c('white','black')
cus_col<-colorRampPalette(colors=colors)
default_par <- par()
number_row <- 28
number_col <- 28
par(mfrow=c(6,6),pty='s',mar=c(1,1,1,1),xaxt='n',yaxt='n')
for(i in 1:36)
{
z<-array(as.matrix(train_1000)[i,-1],dim=c(number_row,number_col))
z<-z[,number_col:1]
image(1:number_row,1:number_col,z,main=train_1000[i,1],col=cus_col(256))
}
set.seed(100)
train_1000 <- data_train[sample(nrow(data_train), size = 1000),]
colors<-c('white','black')
cus_col<-colorRampPalette(colors=colors)
default_par <- par()
number_row <- 28
number_col <- 28
par(mfrow=c(6,6),pty='s',mar=c(1,1,1,1),xaxt='n',yaxt='n')
for(i in 1:36)
{
z<-array(as.matrix(train_1000)[i,-1],dim=c(number_row,number_col))
z<-z[,number_col:1]
image(1:number_row,1:number_col,z,main=train_1000[i,1],col=cus_col(256))
}
par(default_par)
zero_var_col <- nearZeroVar(train_1000, saveMetrics = T)
train_1000_cut <- train_1000[, !zero_var_col$nzv]
pca <- prcomp(train_1000[, -1], center = TRUE, scale = TRUE)
pca <- prcomp(train_1000_cut[, -1], center = TRUE, scale = TRUE)
restr <- pca$x[,1:70] %*% t(pca$rotation[,1:70])
restr <- scale(restr, center = FALSE , scale=1/pca$scale)
restr <- scale(restr, center = -1 * pca$center, scale=FALSE)
dim(restr)
restr <- as.data.frame(cbind(train_1000_cut$label, restr))
test <- data.frame(matrix(NA, nrow = 1000, ncol = ncol(train_1000)))
zero_col_number <- 1
for (i in 1:ncol(train_1000)) {
if (zero_var_col$nzv[i] == F) {
test[, i] <- restr[, zero_col_number]
zero_col_number <- zero_col_number + 1
}
else test[, i] <- train_1000[, i]
}
par(mfrow=c(6,6),pty='s',mar=c(1,1,1,1),xaxt='n',yaxt='n')
for(i in 1:36)
{
z<-array(as.matrix(test)[i,-1],dim=c(number_row,number_col))
z<-z[,number_col:1]
image(1:number_row,1:number_col,z,main=test[i,1],col=cus_col(256))
}
par(default_par)
set.seed(100)
train_1000 <- data_train[sample(nrow(data_train), size = 1000),]
colors<-c('white','black')
cus_col<-colorRampPalette(colors=colors)
default_par <- par()
number_row <- 28
number_col <- 28
par(mfrow=c(5,5),pty='s',mar=c(1,1,1,1),xaxt='n',yaxt='n')
for(i in 1:25)
{
z<-array(as.matrix(train_1000)[i,-1],dim=c(number_row,number_col))
z<-z[,number_col:1]
image(1:number_row,1:number_col,z,main=train_1000[i,1],col=cus_col(256))
}
par(default_par)
zero_var_col <- nearZeroVar(train_1000, saveMetrics = T)
train_1000_cut <- train_1000[, !zero_var_col$nzv]
pca <- prcomp(train_1000_cut[, -1], center = TRUE, scale = TRUE)
restr <- pca$x[,1:70] %*% t(pca$rotation[,1:70])
restr <- scale(restr, center = FALSE , scale=1/pca$scale)
restr <- scale(restr, center = -1 * pca$center, scale=FALSE)
restr <- as.data.frame(cbind(train_1000_cut$label, restr))
test <- data.frame(matrix(NA, nrow = 1000, ncol = ncol(train_1000)))
zero_col_number <- 1
for (i in 1:ncol(train_1000)) {
if (zero_var_col$nzv[i] == F) {
test[, i] <- restr[, zero_col_number]
zero_col_number <- zero_col_number + 1
}
else test[, i] <- train_1000[, i]
}
par(mfrow=c(5,5),pty='s',mar=c(1,1,1,1),xaxt='n',yaxt='n')
for(i in 1:25)
{
z<-array(as.matrix(test)[i,-1],dim=c(number_row,number_col))
z<-z[,number_col:1]
image(1:number_row,1:number_col,z,main=test[i,1],col=cus_col(256))
}
par(default_par)
